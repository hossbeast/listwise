#
# variables
#
CC			= [ gcc ]
CFLAGS	= [ -m64 -O3 -Werror -D_GNU_SOURCE -fPIC ]
LFLAGS	= [ -llistwise ]
BINDIR	= [ /usr/local/bin ]
NAME		= [ listwise ]
LINK		= [ lw ]

SRCDIR	= [ $# ]
DESTDIR	= [ / ]
BINDIR	= [ usr/local/bin ]

# expected object files
OBJECTS	= [ $SRCDIR ] =>> ls/xs/<c>/<o>/y

#
# formulas
#
[ $NAME ] : [ $OBJECTS ]
{
	[ $CC $CFLAGS -o $@ ] [ $@ ] =>> rx/aneed/xm/<o>/ss/u [ $LFLAGS ]
}

#
# dependency discovery
#
[ $SRCDIR ] =>> ls/xm/<c> ~
{
	[ $CC $CFLAGS ] -MM -MP -MG [ $@ ] | gcc-dep [ $@ ] =>> rx/xs/<c>/<o>
}

#
# make .o's
#
[ $OBJECTS ] =>> dj/shift :: [ $< ] =>> rx/xs/<o>/<c>
{
	[ $CC $CFLAGS ] -c [ $@ ] =>> rx/ineed/xm/<c>/ss/u -o [ $@ ]
}

#
# tasks
#

install : [ $NAME ]
{
	install -d														[ $DESTDIR / $BINDIR ] =>> j
	install [ $SRCDIR / $NAME ] =>> j			[ $DESTDIR / $BINDIR / $NAME ] =>> j
	ln -vfs [ $NAME ]											[ $DESTDIR / $BINDIR / $LINK ] =>> j
}

uninstall
{
	rm -f																	[ $DESTDIR / $BINDIR / $NAME ] =>> j
	rm -f																	[ $DESTDIR / $BINDIR / $LINK ] =>> j
}

clean
{
	exec 2>/dev/null
	rm -f [ $SRCDIR / *.o ] =>> j
	rm -f [ $SRCDIR / $NAME ] =>> j
	rm -f [ $SRCDIR / $LINK ] =>> j
}
