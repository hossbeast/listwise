##
## variables
##
CC			= [ gcc ]
FLEX		= [ flex ]
BISON		= [ bison ]
CFLAGS	= [ -m64 -O3 -Werror -D_GNU_SOURCE -fPIC [ $# ] =>> lsr/xm/<h>/rp/dn/ss/u/s/^/-I ]
LFLAGS	= [ -lpcre -ldl -shared -Wl,--version-script=exports -Wl,-soname,-lliblistwise.so ]

# path to each operator so
OPLIST	= [ $# ] =>> s/$/\/op/lsr/xs/<c>/<so>/y

##
## dependencies
##

# default target - build library and all operators
[ all ] : [ liblistwise.so $OPLIST ]

# library depends on .o for each c, l, and y
[ liblistwise.so ] : [ $# ] =>> lsr/m/</op/[^/]+/>/v/xm/<c>
[ liblistwise.so ] : [ $# ] =>> lsr/xs/<l>/<lex.o>/y
[ liblistwise.so ] : [ $# ] =>> lsr/xs/<y>/<tab.o>/y

[ liblistwise.so ] : [ exports ]

[ generator/generator.o ] : [ generator/generator.lex.h ]
[ generator/generator.o ] : [ generator/generator.tab.h ]

[ generator/generator.lex.o ] : [ generator/generator.lex.c ]
[ generator/generator.lex.c ] : [ generator/generator.l generator/generator.tab.h ]
[ generator/generator.lex.h ] : [ generator/generator.l ]
[ generator/generator.tab.o ] : [ generator/generator.tab.c ]
[ generator/generator.tab.c ] : [ generator/generator.y ]
[ generator/generator.tab.h ] : [ generator/generator.y ]

[ lstack/lstack.o ]		: [ common/xmem.o ]
[ re/re.o ]						: [ common/xmem.o ]
[ op/op.o ]						: [ common/xmem.o ]
[ object/object.o ]		: [ common/xmem.o common/xmem.o ]
[ op/cp/cp.so ]				: [ common/xmem.o ]
[ op/s/s.so ]					: [ common/xmem.o common/parseint.o ]
[ op/u/u.so ]					: [ common/xmem.o common/xstring.o ]
[ op/ss/ss.so ]				: [ common/xmem.o common/xstring.o ]
[ op/sn/sn.so ]				: [ common/xmem.o common/xstring.o ]

# operator .so depends on its .o
[ $# ] =>> s/$/\/op/lsr/xs/<c>/<so>/y/dj/shift/pop :: [ $< ] =>> rx/xs/<o>

# each .o depends on its .c
[ $# ] =>> lsr/xs/<c>/<o>/y/dj/shift/pop :: [ $< ] =>> rx/xs/<c>

##
## formulas
##

# link the library
[ liblistwise.so ] :
{
	[ $CC $CFLAGS -o $@ [ $@ ] =>> rx/aneed/xm/<o>/ss/u $LFLAGS ]
}

# library exports
[ exports ] :
{
	  exec 1>[ $@ ]
	  echo "{ global: "
	> sed 's/.*API\(DATA\)\?[[:space:]]\+\([a-zA-Z][0-9a-zA-Z_]*\).*/\2;/p; d' <(\
	  cat -- [ $# ] =>> lsr/m/</op/[^/]+/>/v/xm/<c> )
	> echo "local: *; };"
}

# link an operator so
[ $OPLIST ] :
{
	[ $CC $CFLAGS -o $@ [ $@ ] =>> rx/aneed/m/[.]o$/ss/u ] -L. -llistwise -shared -Wl,-soname,
}

# compile .o from .c
[
	[ $# ] =>> lsr/xs/<c>/<o>/y
	[ $# ] =>> lsr/xs/<l>/<lex.o>/y
	[ $# ] =>> lsr/xs/<y>/<tab.o>/y
] :
{
	[ $CC $CFLAGS ] -c [ $@ ] =>> rx/ineed/m/[.]c$/ss/u -o [ $@ ]
}

# flex - create .lex.c and .lex.h from a .l
[ $# ] =>> lsr/xs/<l>/lex.c/y/v/d/cp/u/xs/lex.c/lex.h/z/v/dj/2/shift/pop/2 ::
{
	[ $FLEX -o [ $@ ] =>> h/1/1/rx ]									\
	[ --header-file= [ $@ ] =>> h/0/1/rx ] =>> j			\
	[ $@ ] =>> rx/ineed/xm/<l>/ss/u
}

# bison - create .tab.c and .tab.h from a .y
[ $# ] =>> lsr/xs/<y>/tab.c/y/v/d/cp/u/xs/tab.c/tab.h/z/v/dj/2/shift/pop/2 ::
{
	[ $BISON --warnings=error -o ]		\
	[ $@ ] =>> h/1/1									\
	[ -d ]														\
	[ $@ ] =>> rx/ineed/xm/<y>/ss/u
}
