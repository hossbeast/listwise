##
## variables
##
CC			= [ gcc ]
FLEX		= [ flex ]
BISON		= [ BISON ]
CFLAGS	= [ -m64 -O3 -Werror -D_GNU_SOURCE -fPIC [ $# ] =>> lsr/xm/<h>/rp/dn/ss/u/s/^/-I ]
LFLAGS	= [ -lpcre -ldl -shared -Wl,--version-script=exports -Wl,-soname,-lliblistwise.so ]

# path to each operator so
OPLIST	= [ $# ] =>> s/$/\/op/lsr/xs/<c>/<so>/y

##
## dependencies
##

# default target - build library and all operators
[ all ] : [ liblistwise $OPLIST ]

# library depends on .o for each c, l, and y
[ liblistwise.so ] : [ $# ] =>> lsr/xs/<c>/<o>/y
[ liblistwise.so ] : [ $# ] =>> lsr/xs/<l>/<lex.o>/y
[ liblistwise.so ] : [ $# ] =>> lsr/xs/<y>/<tab.o>/y

[ liblistwise.so ] : [ exports ]

##
## formulas
##

# link the library
[ liblistwise.so ]
{
	[ $CC $CFLAGS -o $@ [ $@ ] =>> rx/aneed/xm/<o>/ss/u $LFLAGS ]
}

# library exports
[ exports ]
{
	  echo "{ global: " > [ $@ ]
	> sed 's/.*API\(DATA\)\?[[:space:]]\+\(\[a-zA-Z]\[0-9a-zA-Z_]*\).*/\2;/p; d'	\
	  [ $@ ] =>> rx/aneed/m/[.]c/ss/u >> [ $@ ]
	> echo "local: *; \};" \
	  >> [ $@ ]
}

# link an operator so
[ $OPLIST ]
{
	[ $CC $CFLAGS -o $@ [ $@ ] =>> rx/aneed/m/[.]o$/ss/u ] -L. -llistwise -shared -Wl,-soname,
}

# compile .o from .c
[ $# ] =>> lsr/xs/<c>/<o>/y/pop/0
{
	[ $CC $CFLAGS ] -c [ $@ ] =>> rx/ineed/m/[.]c$/ss/u -o [ $@ ]
}

# flex - create .lex.c and .lex.h from a .l
[ $# ] =>> lsr/xs/<l>/lex.c/y/v/d/cp/u/xs/lex.c/lex.h/v/z/dj/2/shift/2/pop
{
	[ $FLEX -o [ $@ ] =>> h/1/1 ]											\
	[ --header-file= [ $@ ] =>> h/0/1/rx ] =>> j			\
	[ $@ ] =>> rx/ineed/xm/<l>
}

# bison - create .tab.c and .tab.h from a .y
[ $# ] =>> lsr/xs/<y>/tab.c/y/v/d/cp/u/xs/tab.c/tab.h/v/z/dj/2/shift/2/pop
{
	[ $BISON --warnings=error -o [ $@ ] =>> h/1/1 -d ]	\
	[ $@ ] =>> rx/ineed/xm/<y>
}
